"""empty message

Revision ID: 7af4d5e1d62d
Revises: e0068d8b8587
Create Date: 2017-09-04 17:20:30.076849

"""

# revision identifiers, used by Alembic.
revision = '7af4d5e1d62d'
down_revision = 'e0068d8b8587'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association',
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ondelete='CASCADE')
    )
    op.drop_table('experiments')
    op.add_column('files', sa.Column('age', sa.String(length=40), nullable=True))
    op.add_column('files', sa.Column('custom_fields', postgresql.JSON(), nullable=True))
    op.add_column('files', sa.Column('experimenter', sa.String(length=255), nullable=True))
    op.add_column('files', sa.Column('gender', sa.String(length=40), nullable=True))
    op.add_column('files', sa.Column('organism', sa.String(length=40), nullable=True))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('files', 'organism')
    op.drop_column('files', 'gender')
    op.drop_column('files', 'experimenter')
    op.drop_column('files', 'custom_fields')
    op.drop_column('files', 'age')
    op.create_table('experiments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('exp_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sha', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('custom_fields', postgresql.JSON(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('age', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('organism', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('experimenter', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='experiments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='experiments_pkey')
    )
    op.drop_table('association')
    op.drop_table('collections')
    ### end Alembic commands ###
